using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Web;
using System.Web.Mvc;

namespace MultitenancyAdministrator.Extensions
{
    //2014-09-02 11:19:09 sculebras: 
    /// <summary>
    /// Extension methods for HtmlHelper
    /// </summary>
    public static class HtmlExtensions
    {
        /// <summary>
        /// Returns an input type=button element that redirects to the virtual path of the specified action.
        /// </summary>
        /// <param name="helper">The HTML helper instance that this method extends.</param>
        /// <param name="value">Value (text) of the button.</param>
        /// <param name="action">The name of the action</param>
        /// <param name="controller">The name of the controller.</param>
        /// <param name="routeValues">An object that contains the parameters for a route.</param>
        /// <returns>An input type=button element.</returns>
        public static MvcHtmlString ActionButton(this HtmlHelper helper,
                                                 string value,
                                                 string action,
                                                 string controller,
                                                 object routeValues,
                                                 object oHtmlAttributes = null)
        {
            string strUrl = (new UrlHelper(helper.ViewContext.RequestContext)).Action(action, controller, routeValues);
            TagBuilder input = new TagBuilder("input");
            input.Attributes.Add("type", "button");
            input.Attributes.Add("value", value);
            input.Attributes.Add("onclick", String.Format("location.href='{0}';return false;", strUrl));

            if (oHtmlAttributes != null)
            {
                Type oType = oHtmlAttributes.GetType();
                PropertyInfo[] arrPropertyInfo = oType.GetProperties();
                foreach (PropertyInfo oPropertyInfo in arrPropertyInfo)
                {
                    input.Attributes.Add(oPropertyInfo.Name, oPropertyInfo.GetValue(oHtmlAttributes).ToString());
                }
            }
            return new MvcHtmlString(input.ToString(TagRenderMode.SelfClosing));
            //helper.Raw(
            //Other Option directly in View: onclick="@String.Format("location.href='{0}';return false;", Url.Action("Action", "Controller", new { id=Model.Id }))"
        }
    }//End class
}//End Namespace				
