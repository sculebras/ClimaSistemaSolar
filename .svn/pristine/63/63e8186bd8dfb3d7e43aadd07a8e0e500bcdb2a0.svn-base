using MultiTenancyAdministrator.Component.Model;
using SF.Core;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MultiTenancyAdministrator.Component.Repositories
{
    //2014-09-10 02:55:13 sculebras: 
    /// <summary>
    /// Repository for Configuration Entity.
    /// </summary>
    public class ConfigurationRepository : Repository<Configuration>
    {
        /// <summary>
        /// Constructor
        /// </summary>
        /// <param name="context"></param>
        public ConfigurationRepository(DbContext context)
            : base(context)
        { }

        /// <summary>
        /// Retrieves (Get) a Configuration according to its unique Name (Enumeration).
        /// </summary>
        /// <param name="enumConfigurationItem">Unique name of the Configuration (Enumeration).</param>
        /// <returns></returns>
        public virtual Configuration Retrieve(Configuration.Items enumConfigurationItem)
        {
            return base.entitySet.FirstOrDefault(e => e.Id == (int)enumConfigurationItem);
        }
        
        /// <summary>
        /// Retrieves all the Configurations in a dictionary.
        /// </summary>
        /// <returns></returns>
        public Dictionary<Configuration.Items, string> RetrieveDictionary() {
            Dictionary<Configuration.Items, string> dicConfigurations = new Dictionary<Configuration.Items, string>();
            IEnumerable<Configuration> listConfigurations = this.RetrieveEnumerable();
            foreach (Configuration oConfiguration in listConfigurations)
            {
                dicConfigurations.Add((Configuration.Items)oConfiguration.Id, oConfiguration.Value);
            }
            return dicConfigurations;
        }


    }//End class
}//End Namespace
