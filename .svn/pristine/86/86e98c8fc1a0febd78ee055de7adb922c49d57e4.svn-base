@model MultiTenancyAdministrator.Component.Model.Connection
    

@{
    //Defines if it is in Create or Edit Mode
    bool blCreate = Model == null;
    string strMode = blCreate ? "Create" : "Edit";

    ViewBag.Title = strMode;
    //Hides Integrated Security fields if it is true and it is in Edit mode
    string strDisplay = !blCreate && Model.IntegratedSecurity ? "style='display:none'" : string.Empty;
    strDisplay = string.Empty;
    //Creates the RouteValues of the Cancel button (acording if it is in Creation or Edit Mode)
    object oCancelRouteValues = blCreate ? null : new { id = Model.Id };
    
} 

<h2>Connection -  @strMode</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Connection</legend>
        <table>
            @if (!blCreate)
            {
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.Id)                    
                </td>
                <td class="editor-field">
                    @Html.DisplayFor(model => model.Id)
                </td>
                
            </tr>
            }
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.Description)
                </td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Description)
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.Description)
                </td>
            </tr>
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.Identifier)
                </td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Identifier)
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.Identifier)
                </td>
            </tr>
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.Server)
                </td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Server)
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.Server)
                </td>
            </tr>
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.DataBase)
                </td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.DataBase)
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.DataBase)
                </td>
            </tr>
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.IntegratedSecurity)
                </td>
                <td class="editor-field">
                   @Html.CheckBoxFor(model => model.IntegratedSecurity, new { onchange = "EditPartial.vdHideIntegratedSecurityHidden(this);" })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.IntegratedSecurity)
                </td>
            </tr>            
            <tr class="IntegratedSecurityHidden" @Html.Raw(strDisplay)>
                <td class="editor-label">
                    @Html.LabelFor(model => model.User)
                </td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.User)
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.User)
                </td>
            </tr>
            <tr class="IntegratedSecurityHidden" @Html.Raw(strDisplay)>
                <td class="editor-label">
                    @Html.LabelFor(model => model.Password)
                </td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Password)
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.Password)
                </td>
            </tr>
        </table>
    </fieldset>
    
     @*Buttons*@
        <p class="float-left">
            <input type="submit" value="Save" title = "Saves data."
                onsubmit="" />
        </p>
        <p> 
            @Html.ActionButton("Cancel", strMode, "Connection", oCancelRouteValues, new { title = "Restores original values." })
        </p>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


