/// <reference path="~/bundles/jqueryval"/>
/// <reference path="String.js" />

function IntegratedSecurityCustomValidation() {
    ///2014-09-05 10:43:10 sculebras: 
    ///<summary>
    ///Validation method and adaptor for JQuery validator to perform Integrated Security validation.
    ///Server side validation: MultiTenancyAdministrator.Component.Model.CustomAnnotation.IntegratedSecurityCustomValidationAttribute
    ///</summary>
}

//STATIC PROPERTIES - CONSTANTS (Used to centralize hardcoeing):
//Name of the JQuery validator rule (must be equal to server  ModelClientValidationRule.ValidationType in GetClientValidationRules method)
IntegratedSecurityCustomValidation.RuleName = "integratedsecuritycustomvalidation";
//Name of properties identificators
IntegratedSecurityCustomValidation.UserPropertyName = "userpropertyname";
IntegratedSecurityCustomValidation.PasswordPropertyName = "passwordpropertyname";
///Error message identificators 
IntegratedSecurityCustomValidation.MsgErrorUsrPasswordMustBeEmpty = "msgerrorusrpasswordmustbeempty";
IntegratedSecurityCustomValidation.MsgErrorUsrPasswordRequired = "msgerrorusrpasswordrequired";


//$(document).ready(function () {
//    alert("ready");
$.validator.addMethod(IntegratedSecurityCustomValidation.RuleName,
        function (value, element, params) {
            ///2014-09-02 10:15:20 sculebras: 
            /// <signature>
            ///   <summary></summary>
            ///   <param name="value" type="bool">value to be evaluated.</param>
            ///   <param name="element" type="Checkbox">Element where the value is contained.</param>
            ///   <param name="params" type="object">Parameters from server (sent through adapter).</param>
            /// </signature>
           
            //Capture Values for business validation
            var blIntegratedSecurity = element.checked;
            var strUser = $("#" + params[IntegratedSecurityCustomValidation.UserPropertyName]).first().val();
            var strPassword = $("#" + params[IntegratedSecurityCustomValidation.PasswordPropertyName]).first().val();
           
            //Business validation
            if (blIntegratedSecurity) {
                if (!(String.isNullOrEmpty(strUser) && String.isNullOrEmpty(strPassword))) {
                    $.validator.messages.integratedsecuritycustomvalidation = params[IntegratedSecurityCustomValidation.MsgErrorUsrPasswordMustBeEmpty];
                    return false;
                }
            }
            else if (String.isNullOrEmpty(strUser) || String.isNullOrEmpty(strPassword)) {
                $.validator.messages.integratedsecuritycustomvalidation = params[IntegratedSecurityCustomValidation.MsgErrorUsrPasswordRequired];
                return false;
            }

            return true;
            //var checkboxId = $(element).attr('data-val-integratedsecuritycustomvalidation');
            //var checkboxValue = $('#' + checkboxId).first().is(":checked");
        });


//Adds an adapter to Jquery validator with server values (Error Messages)
//It will send the server values through the parameter:  params of the $.validator.addMethod("rulename",function (value, element, params) {...
$.validator.unobtrusive.adapters.add(IntegratedSecurityCustomValidation.RuleName,
    [
        IntegratedSecurityCustomValidation.UserPropertyName,
        IntegratedSecurityCustomValidation.PasswordPropertyName,
        IntegratedSecurityCustomValidation.MsgErrorUsrPasswordMustBeEmpty,
        IntegratedSecurityCustomValidation.MsgErrorUsrPasswordRequired
    ],
    function (options) {
        options.rules[IntegratedSecurityCustomValidation.RuleName] = options.params;
        //To override default Error message in Validator, this line must be commented:
        //options.messages[IntegratedSecurityCustomValidation.RuleName] = options.message;
    });



//});

